{"version":3,"sources":["util/Api.js","Components/EditableTable.js","constants.js","Components/index.js","App.js","index.js"],"names":["axios","create","baseURL","headers","Search","Input","originData","EditableCell","editing","dataIndex","title","inputType","children","record","index","restProps","inputNode","Item","name","style","margin","rules","required","message","EditableTable","Form","useForm","form","useState","data","setData","editingKey","setEditingKey","loading","setLoading","filter","setFilter","selectedData","setSelectedData","item","Object","keys","some","key","toLowerCase","includes","useEffect","fetchData","a","get","dataList","map","temp","assign","id","console","log","type","notification","isEditing","cancel","save","validateFields","row","newData","findIndex","splice","push","mergedColumns","width","editable","className","render","_","href","onClick","marginRight","onConfirm","Link","disabled","setFieldsValue","age","address","edit","EditOutlined","DeleteTwoTone","twoToneColor","col","onCell","rowSelection","onChange","selectedRowKeys","selectedRows","placeholder","e","target","value","enterButton","component","components","body","cell","bordered","dataSource","columns","rowClassName","pagination","length","danger","idArray","removeSelected","AdminUI","App","justify","align","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd90a151.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"/\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  InputNumber,\r\n  Popconfirm,\r\n  Form,\r\n  Typography,\r\n  notification,\r\n  Spin,\r\n  Button,\r\n  Divider,\r\n} from \"antd\";\r\nimport axios from \"../util/Api\";\r\nimport { EditOutlined, DeleteTwoTone } from \"@ant-design/icons\";\r\nimport { GET_DATA_URL } from \"../constants\";\r\nconst { Search } = Input;\r\n\r\nconst originData = [];\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst EditableTable = () => {\r\n  const [form] = Form.useForm();\r\n  let [data, setData] = useState(originData);\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [selectedData, setSelectedData] = useState([]);\r\n  const openNotificationWithIcon = (type, message) => {\r\n    notification[type]({\r\n      message: message,\r\n    });\r\n  };\r\n  data =\r\n    data &&\r\n    data.filter((item) => {\r\n      return Object.keys(item).some((key) =>\r\n        item[key].toLowerCase().includes(filter)\r\n      );\r\n    });\r\n  const removeId = (id) => {\r\n    data = data.filter((item) => {\r\n      return item.id !== id;\r\n    });\r\n    setData(data);\r\n  };\r\n  const removeSelected = () => {\r\n    const idArray = selectedData.map((e) => e.id);\r\n    data = data.filter((item) => {\r\n      return !idArray.includes(item.id);\r\n    });\r\n    setData(data);\r\n    setSelectedData([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        let { data: dataList } = await axios.get(GET_DATA_URL);\r\n        dataList = dataList.map((item) => {\r\n          var temp = Object.assign({}, item);\r\n          temp.key = item.id;\r\n          return temp;\r\n        });\r\n        setData(dataList);\r\n        setLoading(false);\r\n      } catch (e) {\r\n        setLoading(false);\r\n        console.log(e);\r\n        openNotificationWithIcon(\"error\", e.message);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      name: \"\",\r\n      age: \"\",\r\n      address: \"\",\r\n      ...record,\r\n    });\r\n    setEditingKey(record.key);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n  };\r\n\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (errInfo) {\r\n      console.log(\"Validate Failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"name\",\r\n      width: \"50%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      width: \"50%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Role\",\r\n      dataIndex: \"role\",\r\n      width: \"50%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"operation\",\r\n      dataIndex: \"operation\",\r\n      className: \"operation\",\r\n      width: \"50%\",\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return (\r\n          <>\r\n            {editable ? (\r\n              <span>\r\n                <a\r\n                  href=\"/#\"\r\n                  onClick={() => save(record.key)}\r\n                  style={{\r\n                    marginRight: 8,\r\n                  }}\r\n                >\r\n                  Save\r\n                </a>\r\n                <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n                  <a href=\"/#\">Cancel</a>\r\n                </Popconfirm>\r\n              </span>\r\n            ) : (\r\n              <Typography.Link\r\n                disabled={editingKey !== \"\"}\r\n                onClick={() => edit(record)}\r\n              >\r\n                <EditOutlined />\r\n              </Typography.Link>\r\n            )}\r\n            <div className=\"delete-btn\">\r\n              <Typography.Link\r\n                disabled={editingKey !== \"\"}\r\n                onClick={() => removeId(record.id)}\r\n              >\r\n                <DeleteTwoTone twoToneColor=\"#eb2f96\" />\r\n              </Typography.Link>\r\n            </div>\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: \"text\",\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      console.log(\r\n        `selectedRowKeys: ${selectedRowKeys}`,\r\n        \"selectedRows: \",\r\n        selectedRows\r\n      );\r\n      setSelectedData(selectedRows);\r\n    },\r\n  };\r\n\r\n  const onSearchChange = (e) => {\r\n    setFilter(e.target.value);\r\n  };\r\n  if (loading) {\r\n    return <Spin />;\r\n  }\r\n  return (\r\n    <>\r\n      <Search\r\n        placeholder=\"Search by name, email or role\"\r\n        onChange={onSearchChange}\r\n        enterButton\r\n        className=\"pb-2\"\r\n      />\r\n      <Divider />\r\n      <Form form={form} component={false}>\r\n        <Table\r\n          components={{\r\n            body: {\r\n              cell: EditableCell,\r\n            },\r\n          }}\r\n          rowSelection={{\r\n            ...rowSelection,\r\n          }}\r\n          bordered\r\n          dataSource={data}\r\n          columns={mergedColumns}\r\n          rowClassName=\"editable-row\"\r\n          pagination={{\r\n            onChange: cancel,\r\n          }}\r\n        />\r\n      </Form>\r\n      {selectedData.length > 0 && (\r\n        <Button\r\n          type=\"primary\"\r\n          danger\r\n          className=\"delete-selected-btn\"\r\n          onClick={() => removeSelected()}\r\n        >\r\n          Delete Selected\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditableTable;\r\n","export const GET_DATA_URL =\r\n  \"https://geektrust.s3-ap-southeast-1.amazonaws.com/adminui-problem/members.json\";\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport EditableTable from \"./EditableTable\";\r\n\r\nconst AdminUI = () => {\r\n  return (\r\n    <div>\r\n      <EditableTable />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminUI;\r\n","import React from \"react\";\r\nimport { Row } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./App.css\";\r\nimport AdminUI from \"./Components/index\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"admin-wrp\">\r\n      <Row justify=\"center\" align=\"middle\">\r\n        <AdminUI />\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}